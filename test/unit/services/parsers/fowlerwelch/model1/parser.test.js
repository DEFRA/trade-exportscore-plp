const Parser = require("../../../../../../app/services/parsers/fowlerwelch/model1/parser");

describe("parseFowlerWelchModel1", () => {
  test("parses json", () => {
    const packingListJson = [
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {
        A: "Item",
        B: "Product code",
        C: "Commodity code",
        D: "Online Check",
        E: "Meursing code",
        F: "Description of goods",
        G: "Country of Origin",
        H: "No. of pkgs \r\n(1547)",
        I: "Type of pkgs",
        J: "Total Gross Weight \r\n(11015.700kgs)",
        K: "Total Net Weight \r\n(7921.700kgs)",
        L: "Total Line Value \r\n(41662.4)",
        M: "NIIRMS Dispatch number",
        N: "Treatment Type (Chilled /Ambient)",
        O: "NIRMS Lane (R/G)",
        P: "Secondary Qty",
        Q: "Cert Type Req",
        R: "Cert Number",
      },
      {
        A: "1",
        B: "1582084",
        C: "0702000007",
        D: "Check - 0702000007",
        E: "",
        F: "Nightingale Cherry Tomatoes TS 42x250g",
        G: "Morocco",
        H: "32",
        I: "Cases",
        J: "400",
        K: "336",
        L: "712.32",
        M: "RMS-GB-000216-004",
        N: "Chilled",
        O: "G",
        P: "",
        Q: "",
        R: "",
      },
      {
        A: "2",
        B: "3153779",
        C: "0702000007",
        D: "Check - 0702000007",
        E: "",
        F: "Cherry Tomatoes TS Core 30x300G",
        G: "Morocco",
        H: "39",
        I: "Cases",
        J: "429",
        K: "351",
        L: "889.2",
        M: "RMS-GB-000216-004",
        N: "Chilled",
        O: "G",
        P: "",
        Q: "",
        R: "",
      },
    ];

    const result = parserService.parseFowlerWelch(packingListJson);
    expect(result.registration_approval_number).toBe(packingListJson[45].M);
    expect(result.items).toHaveLength(2);
    expect(result.items[0].description).toBe(packingListJson[45].F);
    expect(result.items[1].description).toBe(packingListJson[46].F);
    expect(result.items[0].commodity_code).toBe(packingListJson[45].C);
    expect(result.items[1].commodity_code).toBe(packingListJson[46].C);
    expect(result.items[0].number_of_packages).toBe(packingListJson[45].H);
    expect(result.items[1].number_of_packages).toBe(packingListJson[46].H);
    expect(result.items[0].total_net_weight_kg).toBe(packingListJson[45].K);
    expect(result.items[1].total_net_weight_kg).toBe(packingListJson[46].K);
  });

  test("parses null json", () => {
    const packingListJson = [
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {},
      {
        A: "Item",
        B: "Product code",
        C: "Commodity code",
        D: "Online Check",
        E: "Meursing code",
        F: "Description of goods",
        G: "Country of Origin",
        H: "No. of pkgs \r\n(1547)",
        I: "Type of pkgs",
        J: "Total Gross Weight \r\n(11015.700kgs)",
        K: "Total Net Weight \r\n(7921.700kgs)",
        L: "Total Line Value \r\n(41662.4)",
        M: "NIIRMS Dispatch number",
        N: "Treatment Type (Chilled /Ambient)",
        O: "NIRMS Lane (R/G)",
        P: "Secondary Qty",
        Q: "Cert Type Req",
        R: "Cert Number",
      },
      {
        A: "1",
        B: "1582084",
        D: "Check - 0702000007",
        E: "",
        G: "Morocco",
        I: "Cases",
        J: "400",
        L: "712.32",
        O: "G",
        P: "",
        Q: "",
        R: "",
      },
    ];

    const result = parserService.parseFowlerWelch(packingListJson);
    expect(result.registration_approval_number).toBeNull();
    expect(result.items).toHaveLength(1);
    expect(result.items[0].description).toBeNull();
    expect(result.items[0].commodity_code).toBeNull();
    expect(result.items[0].number_of_packages).toBeNull();
    expect(result.items[0].total_net_weight_kg).toBeNull();
  });
});
